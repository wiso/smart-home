version: '3.7'

services:
  portainer-ce:
      container_name: portainer
      image: portainer/portainer-ce
      restart: unless-stopped
      ports:
        - 8000:8000 # Agent
        - 9000:9000 # Web UI
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ./data/portainer-ce:/data

  home-assistant:
    container_name: home-assistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ./config/homeassistant:/config
      - /run/dbus:/run/dbus:ro
      - /etc/localtime:/etc/localtime:ro
    network_mode: host
    restart: unless-stopped
    privileged: true

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    volumes:
      - "./config/mosquitto:/mosquitto/config"
      - "./data/mosquitto/log:/mosquitto/log"
      - "./data/mosquitto/data/:/mosquitto/data"
    restart: unless-stopped
    ports:
      - "1888:1888"

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    depends_on:
      - mosquitto
    volumes:
      - "./config/zigbee2mqtt:/app/data"
      - /run/udev:/run/udev:ro
    devices:
      - "/dev/ttyACM0"
    environment:
      - "TZ=Europe/Rome"
    network_mode: host
    restart: unless-stopped

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
#      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "5300:80/tcp" # WEB UI
    environment:
      TZ: 'Europe/Rome'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
    volumes:
      - './config/etc-pihole:/etc/pihole'
      - './config/etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
#    cap_add:
#      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped

  plex:
    container_name: plex
    image: ghcr.io/linuxserver/plex:arm64v8-latest 
    restart: unless-stopped
    environment:
      - TZ=Europe/Rome
      - PLEX_CLAIM=!secrets.yaml plex_claim
      - VERSION=docker
      - PUID=1000
      - PGID=1000
    network_mode: host
    volumes:
      - ./config/plex:/config
      - ./config/plex/transcode:/transcode
      - $HOME/media/:/media

  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    user: '0'
    volumes:
      - ./config/grafana:/var/lib/grafana
    ports:
      - 3000:3000

  influxdb:
    container_name: influxdb
    image: influxdb:latest
    restart: unless-stopped
    volumes:
      - ./config/influxdb/config.yml:/etc/influxdb2/config.yml
      - ./data/influxdb/data:/var/lib/influxdb2
    ports:
      - "8086:8086"

  duckdns:
      container_name: duckdns
      image: ghcr.io/linuxserver/duckdns
      environment:
      - "TZ=Europe/Rome"
      - "SUBDOMAINS=giurrero.duckdns.org"
      - "TOKEN=!secrets.yaml duckdns"
      restart: always